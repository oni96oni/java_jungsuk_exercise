package ch06_Exercise;
/*
6-8 정답! 2 -3- 5
	1.모든 생성자의 이름은 클래스의 이름과 동일해야한다.
	2.생성자는 객체를 생성하기 위한것이 아니라 초기화하기위한것, 생성하는 것은 new 연산자
	3.클래스에는 생성자가 반드시 하나 이상 있어야하지 않다. 없으면 컴파일러가 기본생성자를 추가해준다.
	라고 생각했는데 컴파일러가 생성자를 추가해주는것이니 반드시 하나 이상 있어야 한다고 생각하자..
	4.생성자가 없는 클래스는 컴파일러가 기본 생성자를 추가한다.
	5.생성자는 오버로딩 할 수 있다.
	
6-9 정답! -4-
	1.this는 객체 자신을 가리키는 참조변수가 맞다.
	2.클래스 내에서라면 어디서든 사용할 수 있다. 가 아니라 인스턴스 메서드에서만 사용이 가능하다. this는 인스턴스 자신의 주소를 저장하고 있으며, 모든 인스턴스 메서드에 숨겨진 채로 존재하는 지역변수이다. 그래서 인스턴스 메서드 내에서만 사용할 수 있다.
	3.지역변수와 인스턴스 변수를 구별할 때 사용한다.
	4.클래스 메서드 내에서도 사용할 수 있다.
	
6-10 정답! 3 4 
	1.메서드의 이름이 같아야 오버로딩 할 수 있다.
	2.매개변수의 개수나 타입이 달라야 오버로딩 할 수 있다.
	3.리턴 타입이 다르지 않아도 오버로딩 할 수 있다.
	4.매개변수의 이름이 다르다고 해서 오버로딩 할 수 있지 않다.
	
6-11 정답! 2 3 4
	1.매개변수의 이름만 달라서 안됨
	2.매개변수 타입 달라서 가능
	3.매개변수 타입 달라서 가능
	4.매개변수 타입이 달라서 가능
	
6-12 정답! 3 5 
	1.멤버변수는 자동 초기화되므로 초기화하지 않고도 값을 참조할 수 있다.
	2.지역변수는 사용하기 전에 반드시 초기화해야 한다. 자동으로 초기화가 되지 않기 때문에! 지역변수는 사용이 잦아서 덮어씌운다 메모리를위해
	3.초기화 블럭보다 생성자가 먼저 수행된다... 가 아니라 초기화 블럭이 먼저 수행된다.
	4.명시적 초기화를 제일 우선적으로 고려해야 한다.
	5.클래스 변수보다 인스턴스 변수가 먼저 초기화 되지 않는다.
	
6-13 정답! 1
	인스턴스 변수의 초기화순서
	기본값 - 명시적초기화 - 초기화 블럭 - 생성자
	
6-14 정답!  1 5 
	1.지역변수는 자동 초기화되지 않으므로 별도의 초기화가 필요없다.
	2.지역변수가 선언된 메서드가 종료되면 지역변수도 함께 소멸한다.
	3.메서드의 매개변수로 선언된 변수도 지역변수이다.
	4.클래스 변수나 인스턴스 변수보다 메모리 부담이 적다.
	5.힙영역에 생성되지않고 호출스택에 생성된다. 
	
6-15 정답! 2
	1.제일 먼저 호출스택에 저장된것은 호출스택 제일 밑에있는 메서드 즉 main메서드가 맞다.
	2.println즉 맨위의 메서드밑에 메서드들은 종료된 상태가 아니라 대기중인 상태이다.
	3.method2를 호출한것은 바로 밑의 메서드 즉 main메서드가 맞다.
	4.println메서드가 종료되면 그 메서드를 호출한 메서드로 돌아가 수행을 재개한다 method1메서드가 맞다.
	5.밑에서 부터 순서대로 호출된것이므로 main-method2-method1-println이 맞다
	6.현재 실행중인 메서드는 println뿐인것이 맞다.
*/